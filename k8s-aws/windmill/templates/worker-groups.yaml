{{- range $v := .Values.windmill.workerGroups }}
{{ if and $v.replicas (gt (int $v.replicas) 0)}}
---
{{- $controllerType := include "validateControllerKind" $v.controller }}
apiVersion: apps/v1
kind: {{ $controllerType }}
metadata:
  name: windmill-workers-{{ $v.name }}
  labels:
    app: windmill-workers
    app.kubernetes.io/name: windmill-workers
    chart: {{ template "windmill.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
    workerGroup: {{ $v.name }}
spec:
  replicas: {{ $v.replicas }}
  {{- if eq $controllerType "Deployment" }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  {{- else if eq $controllerType "StatefulSet" }}
  serviceName: windmill-workers-{{ $v.name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  {{- end }}
  selector:
    matchLabels:
      app: windmill-workers
      workerGroup: {{ $v.name }}
  template:
    metadata:
      labels:
        app: windmill-workers
        app.kubernetes.io/name: windmill-workers
        release: {{ $.Release.Name }}
        workerGroup: {{ $v.name }}
{{- with $v.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with $v.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "windmill.serviceAccountName" $ }}
      {{- if $.Values.windmill.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ $.Values.windmill.imagePullSecrets }}
      {{ end }}
      {{ if $v.initContainers }}
      initContainers:
      {{- with $v.initContainers }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{ end }}
      terminationGracePeriodSeconds: {{ default 604800 $v.terminationGracePeriodSeconds }}
      containers:
      {{- with $v.extraContainers }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      - name: windmill-worker
       {{ if  $.Values.enterprise.nsjail }}
       #because nsjail requires privileged access
        securityContext:
          privileged: true
        {{ else }}
        securityContext:
        {{ with $v.securityContext }}
{{ toYaml . | indent 10 }}
        {{ end }}
        {{ with $v.containerSecurityContext }}
{{ toYaml . | indent 10 }}
        {{ end }}
        {{ end }}
        {{ if $.Values.enterprise.enabled }}
        image: {{ default "ghcr.io/windmill-labs/windmill-ee" $.Values.windmill.image }}:{{ default $.Chart.AppVersion $.Values.windmill.tag }}
        {{ else }}
        image: {{ default "ghcr.io/windmill-labs/windmill" $.Values.windmill.image }}:{{ default $.Chart.AppVersion $.Values.windmill.tag }}
        {{ end }}
        imagePullPolicy: Always
        {{ if $v.command }}
        command:
        {{- with $v.command }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{ end }}
        ports:
        - containerPort: 8001
        {{ if $.Values.enterprise.enabled }}
        readinessProbe:
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 1
          httpGet:
            host:
            scheme: HTTP
            path: /ready
            port: 8001
        {{ end }}
        volumeMounts:
        {{ if or $.Values.windmill.exposeHostDocker $v.exposeHostDocker }}
        - name: docker-sock
          mountPath: "/var/run/docker.sock"
        {{ end }}
        {{ if $v.volumeMounts }}
        {{- with $v.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{ end }}
        env:
        {{- with $v.extraEnv }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{ if $.Values.enterprise.enabled }}
        - name : "METRICS_ADDR"
          value: "true"
        {{ end }}
        {{ if $.Values.windmill.databaseSecret }}
        - name: "DATABASE_URL"
          valueFrom:
            secretKeyRef:
              name: "windmill-database"
              key: "url"
        {{ else if $.Values.windmill.databaseUrlSecretName }}
        - name: "DATABASE_URL"
          valueFrom:
            secretKeyRef:
              name: "{{ $.Values.windmill.databaseUrlSecretName }}"
              key: "{{ $.Values.windmill.databaseUrlSecretKey }}"
        {{ else }}
        - name: "DATABASE_URL"
          value: "{{ $.Values.windmill.databaseUrl }}"
        {{ end }}
        - name: "BASE_URL"
          value: "{{ $.Values.windmill.baseProtocol }}://{{ $.Values.windmill.baseDomain }}"
        - name: "RUST_LOG"
          value: "{{ $.Values.windmill.rustLog }}"
        - name: "MODE"
          value: {{ default "worker" $v.mode }}
        - name: "JSON_FMT"
          value: "true"
        {{ if $.Values.windmill.pipIndexUrl }}
        - name: "PIP_INDEX_URL"
          value: "{{ $.Values.windmill.pipIndexUrl }}"
        {{ end }}
        {{ if $.Values.windmill.pipExtraIndexUrl }}
        - name: "PIP_EXTRA_INDEX_URL"
          value: "{{ $.Values.windmill.pipExtraIndexUrl }}"
        {{ end }}
        {{ if $.Values.windmill.pipTrustedHost }}
        - name: "PIP_TRUSTED_HOST"
          value: "{{ $.Values.windmill.pipTrustedHost }}"
        {{ end }}
        {{ if $.Values.windmill.npmConfigRegistry }}
        - name: "NPM_CONFIG_REGISTRY"
          value: "{{ $.Values.windmill.npmConfigRegistry }}"
        {{ end }}
        {{ if $.Values.enterprise.enabled }}
        {{ if $.Values.enterprise.licenseKeySecretName }}
        - name: "LICENSE_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.enterprise.licenseKeySecretName }}
              key: {{ $.Values.enterprise.licenseKeySecretKey }}
        {{ else }}
        - name: "LICENSE_KEY"
          value: "{{ $.Values.enterprise.licenseKey }}"
        {{ end }}
        {{ if $.Values.enterprise.enabledS3DistributedCache }}
        - name: "S3_CACHE_BUCKET"
          value: "{{ $.Values.enterprise.s3CacheBucket }}"
        {{ end }}
        {{ if $.Values.enterprise.nsjail }}
        - name: "DISABLE_NSJAIL"
          value: "false"
        {{ end }}
        {{ end }}
        - name: "WORKER_GROUP"
          value: "{{ $v.name }}"
        resources:
{{ toYaml $v.resources | indent 12 }}
      volumes:
    {{ if or $.Values.windmill.exposeHostDocker $v.exposeHostDocker }}
      - name: docker-sock
        hostPath:
          path: "/var/run/docker.sock"
          type: Socket
    {{ end }}
    {{- with $v.volumes }}
    {{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with $v.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $v.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $v.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $v.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if eq $controllerType "StatefulSet" }}
  {{- if $v.volumeClaimTemplates }}
  volumeClaimTemplates:
    {{- toYaml $v.volumeClaimTemplates | nindent 2 }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}
