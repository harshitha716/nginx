pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "sample-app"
        AWS_REGION = "us-east-2"
        ECR_REPO_URI = "842675998483.dkr.ecr.us-east-2.amazonaws.com/harshitha"
        GIT_REPO_URL = 'https://github.com/harshitha716/nginx.git'
        GIT_BRANCH = 'main' // Set the branch you want to deploy from
        ECR_REGION = 'us-east-2' // Replace with your AWS region
        AWS_ACCESS_KEY_ID =  'AKIA4IM3HJ4JRD3KTLLL'
        AWS_SECRET_ACCESS_KEY = 'WX5+6wyw+rEuMWiCNCzmNpOgnz4mRH6AyQz4+FJi'
        AWS_DEFAULT_REGION = 'us-east-2'
        ARGOCD_SERVER = 'https://localhost:8080'
        ARGOCD_APP_NAME = 'your-application-name'
    }

    }

    stages {
        stage('Checkout Code') {
            steps {
                url: 'https://github.com/harshitha716/nginx',
                branch: 'main'
            }
        }
       stage('Build and Push Docker Image') {
        steps {
        script {
            sh 'cd nginx/nginx-app && docker build -t ${DOCKER_IMAGE} .'
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 842675998483.dkr.ecr.us-east-2.amazonaws.com
            docker tag harshitha:latest 842675998483.dkr.ecr.us-east-2.amazonaws.com/harshitha:latest
            docker push 842675998483.dkr.ecr.us-east-2.amazonaws.com/harshitha:latest
            }
        }
      }
    }


        stage('Deploy to EKS with ArgoCD') {
            steps {
                script {
                    // Trigger ArgoCD deployment (assuming you have an ArgoCD application set up)
                    sh """
                     kubectl apply -f deployment.yaml 
                     kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG 
                     kubectl rollout status deployment/$DEPLOYMENT_NAME 

                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
