pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "${ECR_REPO_URI}:${IMAGE_TAG}"
        AWS_REGION = "us-east-2"
        ECR_REPO_URI = "842675998483.dkr.ecr.us-east-2.amazonaws.com/harshitha"
        GIT_REPO_URL = 'https://github.com/harshitha716/nginx.git'
        GIT_BRANCH = 'jenkins-updates'
        DEPLOYMENT_YAML_PATH = 'nginx-app/deployment.yaml'
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    // Explicitly checkout the jenkins-updates branch to avoid detached HEAD
                    echo "Checking out the jenkins-updates branch"
                    sh 'git checkout jenkins-updates'
                    checkout([$class: 'GitSCM', 
                        branches: [[name: "*/${GIT_BRANCH}"]], 
                        userRemoteConfigs: [[url: "${GIT_REPO_URL}"]]
                    ])
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh 'cd nginx-app && docker build -t ${DOCKER_IMAGE} .'
                    sh 'aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${ECR_REPO_URI}'
                    sh 'docker push ${DOCKER_IMAGE}'
                }
            }
        }

        stage('Update deployment.yaml with new image') {
            steps {
                script {
                    // Debug: Print contents of the deployment.yaml file before modification
                    echo "Before modification, contents of deployment.yaml:"
                    sh "cat ${DEPLOYMENT_YAML_PATH}"

                    // Update the deployment.yaml file with the new image tag using sed
                    sh """
                        sed -i 's|image: .*|image: ${DOCKER_IMAGE}|' ${DEPLOYMENT_YAML_PATH}
                    """

                    // Debug: Print contents of the deployment.yaml file after modification
                    echo "After modification, contents of deployment.yaml:"
                    sh "cat ${DEPLOYMENT_YAML_PATH}"
                }
            }
        }

        stage('Commit Updated deployment.yaml') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                        sh '''
                            # Ensure we are on the correct branch (jenkins-updates)
                            git checkout jenkins-updates

                            # Stage the changes to deployment.yaml
                            git add ${DEPLOYMENT_YAML_PATH}

                            # Check if there are any changes to commit
                            git diff --cached --exit-code ${DEPLOYMENT_YAML_PATH} || (
                                echo "Changes detected, committing deployment.yaml..."
                                git config --global user.name "harshitha716"
                                git config --global user.email "harshithapendiyala0812@gmail.com"

                                # Commit the changes directly on the jenkins-updates branch
                                git commit -m "Update deployment.yaml with new image: ${DOCKER_IMAGE} [Jenkins update: Don't trigger webhook]"
                            )

                            # Pull the latest changes from the remote jenkins-updates branch
                            git pull origin jenkins-updates --no-rebase

                            # Push the changes to the remote jenkins-updates branch
                            git push https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/harshitha716/nginx.git jenkins-updates
                        '''
                    }
                }
            }
        }
    }
}
